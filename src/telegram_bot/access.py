from datetime import datetime, timedelta
from typing import Union
from src.database.session import SessionLocal
from src.database.repository import UserRepository, UserStatus

ADMIN_NICK = "@your_admin"  # TODO: –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω–∏–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞


def ensure_user(telegram_id: int, username: Union[str, None]) -> tuple[str, Union[datetime, None]]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç tuple (status, trial_end).
    status: "active" | "trial" | "blocked".
    """
    db = SessionLocal()
    repo = UserRepository(db)
    user = repo.get_user_by_telegram_id(telegram_id)

    if user is None:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—ë–º –∏ –¥–∞—ë–º –¥–µ–Ω—å trial
        trial_end = datetime.utcnow() + timedelta(days=1)
        repo.create_user(telegram_id, username or "unknown")
        db.close()
        return "trial", trial_end

    # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å –∏ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è trial
    if user.status == UserStatus.BLOCKED:
        db.close()
        return "blocked", None

    if user.status == UserStatus.TRIAL:
        db.close()
        return "trial", user.trial_end_date

    db.close()
    return "active", None


def block_message() -> str:
    return (
        "üö´ –î–æ—Å—Ç—É–ø –æ–±–º–µ–∂–µ–Ω–æ.\n"
        f"–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø ‚Äî –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {ADMIN_NICK}"
    ) 